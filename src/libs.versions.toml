[versions]

# Gradle
gradleVersionsChecker = "0.45.0"

# Jetbrains
kotlin = "1.8.10"
kotlinxCoroutines = "1.6.4"
kotlinxSerialization = "1.4.1"
kotlinxDatetime = "0.4.0"
kotlinxBinaryCompatibilityValidator = "0.12.1"
kotlinxCollectionsImmutable = "0.3.5"
dokka = "1.7.20"
jetbrainsCompose = "1.2.2"
ktor = "2.2.3"

# Android and Jetpack
android = "7.3.1"
jetpackActivity = "1.6.1"
jetpackLifecycle = "2.5.1"
jetpackDatastore = "1.0.0"
jetpackMedia3 = "1.0.0-beta03"
jetpackCamerax = "1.2.1"
jetpackCompose = "1.3.3"
jetpackComposeCompiler = "1.4.0"
jetpackTv = "1.0.0-alpha03"

# Google
accompanist = "0.28.0"
ksp = "1.8.10-1.0.9"
playServicesMlKitBarcodeScanning = "18.1.0"

# Square
sqldelight = "1.5.5"
okhttp = "4.10.0"
molecule = "0.7.0"

# Other
multiplatformSettings = "1.0.0"
kermit = "1.2.2"
bundlizer = "0.7.0"
coil = "2.2.2"
whatTheStack = "1.0.0-alpha04"
kotlinInject = "0.6.1"
uuid = "0.6.0"
bignum = "0.3.7"
kotlinCsv = "1.8.0"

# Mine
mineCommon = "0.2.2"

[plugins]
# Gradle Versions Checker
gradle-versions-checker = { id = "com.github.ben-manes.versions", version.ref = "gradleVersionsChecker" }

# Android
android-application = { id = "com.android.application", version.ref = "android" }
android-library = { id = "com.android.library", version.ref = "android" }

# Kotlin
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# KotlinX Binary Compatibility Validator
kotlinx-binaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinxBinaryCompatibilityValidator" }

# Dokka
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }

# Jebrains Compose
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "jetbrainsCompose" }

# SQLDelight
sqldelight = { id = "com.squareup.sqldelight", version.ref = "sqldelight" }

# Molecule
molecule = { id = "app.cash.molecule", version.ref = "molecule" }

# Kotlin Symbol Processing
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

[libraries]

# KotlinX Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }

# KotlinX Serialization
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinxSerialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

# KotlinX DateTime
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }

# KotlinX Immutable Collections
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinxCollectionsImmutable" }

# Jetbrains Compose
jetbrains-compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "jetbrainsCompose" }

# Ktor
ktor-websockets = { module = "io.ktor:ktor-websockets", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-serialization-kotlinxJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# Jetpack Activity
jetpack-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "jetpackActivity" }
jetpack-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "jetpackActivity" }

# Jetpack Lifecycle
jetpack-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "jetpackLifecycle" }

# Jetpack DatatStore
jetpack-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "jetpackDatastore" }

# Jetpack Media3
jetpack-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "jetpackMedia3" }
jetpack-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "jetpackMedia3" }
jetpack-media3-session = { module = "androidx.media3:media3-session", version.ref = "jetpackMedia3" }
jetpack-media3-exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "jetpackMedia3" }
jetpack-media3-datasource-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "jetpackMedia3" }

# Jetpack CameraX
jetpack-camerax-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "jetpackCamerax" }
jetpack-camerax-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "jetpackCamerax" }
jetpack-camerax-view = { module = "androidx.camera:camera-view", version.ref = "jetpackCamerax" }

# Jetpack Compose
jetpack-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "jetpackComposeCompiler" }
jetpack-compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "jetpackCompose" }
jetpack-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "jetpackCompose" }
jetpack-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "jetpackCompose" }
jetpack-compose-material = { module = "androidx.compose.material:material", version.ref = "jetpackCompose" }
jetpack-compose-animation = { module = "androidx.compose.animation:animation", version.ref = "jetpackCompose" }

# Jetpack TV
jetpack-tv-foundation = { module = "androidx.tv:tv-foundation", version.ref = "jetpackTv" }
jetpack-tv-material = { module = "androidx.tv:tv-material", version.ref = "jetpackTv" }

# Accompanist
accompanist-insets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanist" }

# MLKit
playServices-mlkit-barcodeScanning = { module = "com.google.android.gms:play-services-mlkit-barcode-scanning", version.ref = "playServicesMlKitBarcodeScanning" }

# SQLDelight
sqldelight-runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-androidDriver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-sqliteDriver = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutinesExtensions = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

# OkHttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

# Multiplatform Settings
multiplatformSettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
multiplatformSettings-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "multiplatformSettings" }

# Kermit
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

# Bundlizer
bundlizer = { module = "dev.ahmedmourad.bundlizer:bundlizer-core", version.ref = "bundlizer" }

# Coil
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# WhatTheStack
whatTheStack = { module = "com.github.haroldadmin:WhatTheStack", version.ref = "whatTheStack" }

# kotlin-inject
kotlinInject-compilerKsp = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlinInject" }
kotlinInject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlinInject" }

# UUID
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }

# BigNum
bignum = { module = "com.ionspin.kotlin:bignum", version.ref = "bignum" }

# kotlin-csv
kotlinCsvJvm = { module = "com.github.doyaaaaaken:kotlin-csv-jvm", version.ref = "kotlinCsv" }

# Common
mine-common-core = { module = "com.saurabhsandav.common:compose", version.ref = "mineCommon" }
mine-common-compose = { module = "com.saurabhsandav.common:compose", version.ref = "mineCommon" }
